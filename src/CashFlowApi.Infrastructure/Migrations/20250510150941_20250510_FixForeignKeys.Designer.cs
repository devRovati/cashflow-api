// <auto-generated />
using System;
using CashFlowApi.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashFlowApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250510150941_20250510_FixForeignKeys")]
    partial class _20250510_FixForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CashFlowApi.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("category_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("CategoryId")
                        .HasName("pk_categories_category_id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_categories_created_by");

                    b.HasIndex("UpdatedBy")
                        .HasDatabaseName("ix_categories_updated_by");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("CashFlowApi.Domain.Entities.TransactionEntity", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("payment_method");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("transaction_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("TransactionId")
                        .HasName("pk_transactions_transaction_id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_transactions_created_by");

                    b.HasIndex("UpdatedBy")
                        .HasDatabaseName("ix_transactions_updated_by");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("CashFlowApi.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("pk_users_user_id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Email")
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CashFlowApi.Domain.Entities.CategoryEntity", b =>
                {
                    b.HasOne("CashFlowApi.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_categories_users_created_by");

                    b.HasOne("CashFlowApi.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("fk_categories_users_updated_by");
                });

            modelBuilder.Entity("CashFlowApi.Domain.Entities.TransactionEntity", b =>
                {
                    b.HasOne("CashFlowApi.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_users_created_by");

                    b.HasOne("CashFlowApi.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("fk_transactions_users_updated_by");
                });

            modelBuilder.Entity("CashFlowApi.Domain.Entities.UserEntity", b =>
                {
                    b.HasOne("CashFlowApi.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("fk_users_users_created_by");

                    b.HasOne("CashFlowApi.Domain.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .HasConstraintName("fk_users_users_updated_by");
                });
#pragma warning restore 612, 618
        }
    }
}
